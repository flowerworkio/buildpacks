#!/usr/bin/env bash

echo "---> asdf buildpack"
golang_version=$(cat .tool-versions | grep golang | awk '{print $2}')
ruby_version=$(cat .tool-versions | grep ruby | awk '{print $2}')
erlang_version=$(cat .tool-versions | grep erlang | awk '{print $2}')
elixir_version=$(cat .tool-versions | grep elixir | awk '{print $2}')
nodejs_version=$(cat .tool-versions | grep nodejs | awk '{print $2}')

set -euo pipefail

layers_dir="$1"
platform_dir="$2"
build_plan="$3"

echo "---> Downloading and extracting asdf"
asdf_layer="$layers_dir/.asdf"
mkdir -p $asdf_layer
git clone https://github.com/asdf-vm/asdf.git $asdf_layer --branch v0.9.0
mkdir -p "$asdf_layer/profile.d"
asdf_profile="$asdf_layer/profile.d/asdf.sh"
cat > $asdf_profile <<-EOF
export ASDF_DIR=${asdf_layer}
export ASDF_DATA_DIR=${asdf_layer}
. ${asdf_layer}/asdf.sh
EOF
source $asdf_profile
asdf update
echo -e '[types]\nlaunch = true\nbuild = true' > "$asdf_layer.toml"

if [[ -n "$erlang_version" ]]; then
  echo -e "---> Installing erlang"
  asdf plugin add erlang
  export KERL_CONFIGURE_OPTIONS="--without-wx --without-debugger --without-observer --without-et"
  asdf install erlang $erlang_version
fi

if [[ -n "$elixir_version" ]]; then
  echo -e "---> Installing elixir"
  asdf plugin add elixir
  asdf install elixir $elixir_version
fi

if [[ -n "$nodejs_version" ]]; then
  echo -e "---> Installing nodejs"
  asdf plugin add nodejs
  export KERL_CONFIGURE_OPTIONS="--without-wx --without-debugger --without-observer --without-et"
  asdf install nodejs $nodejs_version
fi

if [[ -n "$ruby_version" ]]; then
  echo -e "---> Installing ruby"
  asdf plugin add ruby
  asdf install ruby $ruby_version
fi

if [[ -n "$golang_version" ]]; then
  echo -e "---> Installing golang"
  asdf plugin add golang
  asdf install golang $golang_version
fi

exit 0
